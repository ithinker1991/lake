group 'io.ashu'
version '1.0-SNAPSHOT'

//sourceCompatibility = 1.8
//targetCompatibility = 1.8
//version = '0.0.1-SNAPSHOT'




buildscript {
	ext {
		springBootVersion = '2.1.0.M4'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
group = 'io.ashu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

//
//jar {
//    baseName = 'gradle-simple'
//    version =  '0.1.0'
//    manifest {
//        attributes 'Main-Class': 'io.ashu.facade.wallet.ShellWallet'
//    }
//}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/snapshot" }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

//    implementation('org.springframework.shell:spring-shell-starter:2.0.0.RELEASE')
//    compileOnly('org.projectlombok:lombok')
//    testImplementation('org.springframework.boot:spring-boot-starter-test')

    compile "com.madgag.spongycastle:core:1.58.0.0"
    compile "com.madgag.spongycastle:prov:1.58.0.0"

    // util
    compile group: 'com.google.guava', name: 'guava', version: '24.1-jre'
    compile "org.projectlombok:lombok:1.16.18"
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.44'

    // levelDB
    compile "org.iq80.leveldb:leveldb:0.7"
    compile group: "org.fusesource.leveldbjni", name: "leveldbjni-all", version: "1.8"

    // log
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // wallet
    compile 'org.springframework.shell:spring-shell-starter:2.0.1.BUILD-SNAPSHOT'
    compile 'org.springframework.boot:spring-boot-starter'
}

def binaryRelease(taskName, jarName, mainClass) {
    return tasks.create("${taskName}", Jar) {
        baseName = jarName
        version = null
        from(sourceSets.main.output) {
            include "/**"
        }

        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }

        manifest {
            attributes "Main-Class": "${mainClass}"
        }
    }
}

//
//
//artifacts {
//    archives(binaryRelease('buildWallet', 'wallet', 'io.ashu.facade.wallet.ShellWallet'))
//}